# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22" # You can adjust this to match your project's Node version

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: |
          # Set base path for GitHub Pages (repository name)
          export REPO_NAME=$(echo $GITHUB_REPOSITORY | cut -d'/' -f2)
          # For Vite projects
          if [ -f "vite.config.js" ] || [ -f "vite.config.ts" ]; then
            echo "Building Vite project with base path: /$REPO_NAME/"
            npm run build -- --base=/$REPO_NAME/
          else
            # For other build tools, set PUBLIC_URL or similar environment variable
            export PUBLIC_URL=/$REPO_NAME/
            npm run build
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload dist directory
          path: "./dist"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
